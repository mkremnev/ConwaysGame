import React from 'react';
import { GameOfLifeWithRedux } from '@/modules/GameOfLifeWithRedux/GameOfLifeWithRedux';
import { Provider } from 'react-redux';
import { mount } from 'enzyme';
import { reducer } from '@/store';
import { createStore } from 'redux';
import configureStore from 'redux-mock-store';
import { cellGridFillRandom } from './helpers';

describe('Testing component GameOfLifeWithRedux', () => {
	describe('GameOfLifeWithRedux with mocked store', () => {
		const mockStore = configureStore([]);
		let store: any;

		beforeEach(() => {
			store = mockStore({
				game: {
					board: cellGridFillRandom(20, 20, () => false),
					gameStatus: false,
					value: '500',
					rows: 20,
					columns: 20,
				},
			});
		});

		it('Should generate actions setCell on click', () => {
			const wrapper = mount(
				<Provider store={store}>
					<GameOfLifeWithRedux />
				</Provider>,
			);
			(wrapper.find('Field').props() as any).onClick(100, 999);
			expect(store.getActions()).toMatchInlineSnapshot(`
		Array [
		  Object {
		    "payload": Object {
		      "x": 100,
		      "y": 999,
		    },
		    "type": "field/setCell",
		  },
		]
	`);
		});
	});

	describe('GameOfLifeWithRedux with real store', () => {
		let store: any;

		beforeEach(() => {
			store = createStore(reducer, {
				game: {
					board: cellGridFillRandom(20, 20, () => false),
					gameStatus: false,
					value: '500',
					rows: 20,
					columns: 20,
				},
			});
			jest.spyOn(store, 'dispatch');
		});

		it('should generate action setCell on click', () => {
			const wrapper = mount(
				<Provider store={store}>
					<GameOfLifeWithRedux />
				</Provider>,
			);

			(wrapper.find('Field').props() as any).onClick(0, 1);
			wrapper.update();
			(wrapper.find('Field').props() as any).onClick(1, 1);

			expect(store.getState()).toMatchInlineSnapshot(`
		Object {
		  "game": Object {
		    "board": Array [
		      Array [
		        false,
		        true,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        true,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		    ],
		    "columns": 20,
		    "gameStatus": false,
		    "rows": 20,
		    "value": "500",
		  },
		  "login": Object {
		    "status": 0,
		    "username": "",
		  },
		}
	`);
			expect((store.dispatch as jest.Mock).mock.calls)
				.toMatchInlineSnapshot(`
		Array [
		  Array [
		    Object {
		      "payload": Object {
		        "x": 0,
		        "y": 1,
		      },
		      "type": "field/setCell",
		    },
		  ],
		  Array [
		    Object {
		      "payload": Object {
		        "x": 1,
		        "y": 1,
		      },
		      "type": "field/setCell",
		    },
		  ],
		]
	`);
		});

		test('Expected actions updateBoard', () => {
			const wrapper = mount(
				<Provider store={store}>
					<GameOfLifeWithRedux />
				</Provider>,
			);

			(wrapper
				.find('button[children="Обновить"]')
				.props() as any).onClick();
			expect((store.dispatch as jest.Mock).mock.calls)
				.toMatchInlineSnapshot(`
		Array [
		  Array [
		    Object {
		      "payload": undefined,
		      "type": "field/updateBoard",
		    },
		  ],
		]
	`);
		});

		test('Expected actions clearBoard', () => {
			const wrapper = mount(
				<Provider store={store}>
					<GameOfLifeWithRedux />
				</Provider>,
			);

			(wrapper
				.find('button[children="Очистить"]')
				.props() as any).onClick();
			expect(store.getState()).toMatchInlineSnapshot(`
		Object {
		  "game": Object {
		    "board": Array [
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		      Array [
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		        false,
		      ],
		    ],
		    "columns": 20,
		    "gameStatus": false,
		    "rows": 20,
		    "value": "500",
		  },
		  "login": Object {
		    "status": 0,
		    "username": "",
		  },
		}
	`);
			expect((store.dispatch as jest.Mock).mock.calls)
				.toMatchInlineSnapshot(`
		Array [
		  Array [
		    Object {
		      "payload": undefined,
		      "type": "field/clearBoard",
		    },
		  ],
		]
	`);
		});
		test('Expected actions changeSpeed', () => {
			const wrapper = mount(
				<Provider store={store}>
					<GameOfLifeWithRedux />
				</Provider>,
			);

			(wrapper.find('input').at(1).props() as any).onChange({
				target: { value: 250 },
			});
			expect(store.dispatch as jest.Mock).toHaveBeenCalledTimes(1);
			expect((store.dispatch as jest.Mock).mock.calls)
				.toMatchInlineSnapshot(`
		Array [
		  Array [
		    Object {
		      "payload": 250,
		      "type": "field/addCell",
		    },
		  ],
		]
	`);
		});
	});
});
